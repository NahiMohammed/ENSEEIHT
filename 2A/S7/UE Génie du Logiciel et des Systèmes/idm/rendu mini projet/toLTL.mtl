[comment encoding = UTF-8 /]
[module toLTL('http://petrinet')]


[template public petriToLTL(aPetriNet : PetriNet)]
[comment @main/]
[file (aPetriNet.name.concat('.ltl'), false, 'UTF-8')]
<> [for(pl : Place | aPetriNet.petrielements->getPlace())]
[if(pl.name.substring(pl.name.lastIndexOf('_') + 1).matches('finished'))][pl.name/]/\[/if][/for];
[/file]
[/template]


[query public getArc(elements : OrderedSet(PetriElement)) : OrderedSet(Arc) = 
	elements->select( e | e.oclIsTypeOf(Arc) )
		->collect( e | e.oclAsType(Arc) )
		->asOrderedSet()
/]
[query public getPlace(elements : OrderedSet(PetriElement)) : OrderedSet(Place) = 
	elements->select( e | e.oclIsTypeOf(Place) )
		->collect( e | e.oclAsType(Place) )
		->asOrderedSet()
/]

[query public getTransition(elements : OrderedSet(PetriElement)) : OrderedSet(Transition) = 
	elements->select( e | e.oclIsTypeOf(Transition) )
		->collect( e | e.oclAsType(Transition) )
		->asOrderedSet()
/]


[template public getArcType(arc : Arc)]
[if (arc.linkType = ArcType::normalArc)]
*[elseif (arc.linkType = ArcType::readArc)]
?[/if]
[/template]